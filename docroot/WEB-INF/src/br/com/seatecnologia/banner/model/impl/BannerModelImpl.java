/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package br.com.seatecnologia.banner.model.impl;

import br.com.seatecnologia.banner.model.Banner;
import br.com.seatecnologia.banner.model.BannerModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

/**
 * The base model implementation for the Banner service. Represents a row in the &quot;Banner&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.seatecnologia.banner.model.BannerModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BannerImpl}.
 * </p>
 *
 * @author Oney
 * @see BannerImpl
 * @see br.com.seatecnologia.banner.model.Banner
 * @see br.com.seatecnologia.banner.model.BannerModel
 * @generated
 */
public class BannerModelImpl extends BaseModelImpl<Banner>
	implements BannerModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a banner model instance should use the {@link br.com.seatecnologia.banner.model.Banner} interface instead.
	 */
	public static final String TABLE_NAME = "Banner";
	public static final Object[][] TABLE_COLUMNS = {
			{ "bannerId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "title", Types.VARCHAR },
			{ "description", Types.VARCHAR },
			{ "link", Types.VARCHAR },
			{ "image", Types.VARCHAR },
			{ "position", Types.INTEGER },
			{ "type_", Types.INTEGER },
			{ "status", Types.INTEGER },
			{ "groupId", Types.BIGINT },
			{ "portletId", Types.VARCHAR },
			{ "plId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Banner (bannerId LONG not null primary key,name VARCHAR(75) null,title VARCHAR(75) null,description VARCHAR(75) null,link VARCHAR(75) null,image VARCHAR(75) null,position INTEGER,type_ INTEGER,status INTEGER,groupId LONG,portletId VARCHAR(75) null,plId LONG)";
	public static final String TABLE_SQL_DROP = "drop table Banner";
	public static final String ORDER_BY_JPQL = " ORDER BY banner.position ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Banner.position ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.seatecnologia.banner.model.Banner"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.seatecnologia.banner.model.Banner"),
			true);

	public Class<?> getModelClass() {
		return Banner.class;
	}

	public String getModelClassName() {
		return Banner.class.getName();
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.seatecnologia.banner.model.Banner"));

	public BannerModelImpl() {
	}

	public long getPrimaryKey() {
		return _bannerId;
	}

	public void setPrimaryKey(long primaryKey) {
		setBannerId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_bannerId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public long getBannerId() {
		return _bannerId;
	}

	public void setBannerId(long bannerId) {
		if (!_setOriginalBannerId) {
			_setOriginalBannerId = true;

			_originalBannerId = _bannerId;
		}

		_bannerId = bannerId;
	}

	public long getOriginalBannerId() {
		return _originalBannerId;
	}

	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public String getTitle() {
		if (_title == null) {
			return StringPool.BLANK;
		}
		else {
			return _title;
		}
	}

	public void setTitle(String title) {
		_title = title;
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public String getLink() {
		if (_link == null) {
			return StringPool.BLANK;
		}
		else {
			return _link;
		}
	}

	public void setLink(String link) {
		_link = link;
	}

	public String getImage() {
		if (_image == null) {
			return StringPool.BLANK;
		}
		else {
			return _image;
		}
	}

	public void setImage(String image) {
		_image = image;
	}

	public int getPosition() {
		return _position;
	}

	public void setPosition(int position) {
		if (!_setOriginalPosition) {
			_setOriginalPosition = true;

			_originalPosition = _position;
		}

		_position = position;
	}

	public int getOriginalPosition() {
		return _originalPosition;
	}

	public int getType() {
		return _type;
	}

	public void setType(int type) {
		_type = type;
	}

	public int getStatus() {
		return _status;
	}

	public void setStatus(int status) {
		_status = status;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public String getPortletId() {
		if (_portletId == null) {
			return StringPool.BLANK;
		}
		else {
			return _portletId;
		}
	}

	public void setPortletId(String portletId) {
		if (_originalPortletId == null) {
			_originalPortletId = _portletId;
		}

		_portletId = portletId;
	}

	public String getOriginalPortletId() {
		return GetterUtil.getString(_originalPortletId);
	}

	public long getPlId() {
		return _plId;
	}

	public void setPlId(long plId) {
		if (!_setOriginalPlId) {
			_setOriginalPlId = true;

			_originalPlId = _plId;
		}

		_plId = plId;
	}

	public long getOriginalPlId() {
		return _originalPlId;
	}

	@Override
	public Banner toEscapedModel() {
		if (isEscapedModel()) {
			return (Banner)this;
		}
		else {
			if (_escapedModelProxy == null) {
				_escapedModelProxy = (Banner)Proxy.newProxyInstance(_classLoader,
						_escapedModelProxyInterfaces,
						new AutoEscapeBeanHandler(this));
			}

			return _escapedModelProxy;
		}
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					Banner.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		BannerImpl bannerImpl = new BannerImpl();

		bannerImpl.setBannerId(getBannerId());
		bannerImpl.setName(getName());
		bannerImpl.setTitle(getTitle());
		bannerImpl.setDescription(getDescription());
		bannerImpl.setLink(getLink());
		bannerImpl.setImage(getImage());
		bannerImpl.setPosition(getPosition());
		bannerImpl.setType(getType());
		bannerImpl.setStatus(getStatus());
		bannerImpl.setGroupId(getGroupId());
		bannerImpl.setPortletId(getPortletId());
		bannerImpl.setPlId(getPlId());

		bannerImpl.resetOriginalValues();

		return bannerImpl;
	}

	public int compareTo(Banner banner) {
		int value = 0;

		if (getPosition() < banner.getPosition()) {
			value = -1;
		}
		else if (getPosition() > banner.getPosition()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Banner banner = null;

		try {
			banner = (Banner)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = banner.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BannerModelImpl bannerModelImpl = this;

		bannerModelImpl._originalBannerId = bannerModelImpl._bannerId;

		bannerModelImpl._setOriginalBannerId = false;

		bannerModelImpl._originalPosition = bannerModelImpl._position;

		bannerModelImpl._setOriginalPosition = false;

		bannerModelImpl._originalGroupId = bannerModelImpl._groupId;

		bannerModelImpl._setOriginalGroupId = false;

		bannerModelImpl._originalPortletId = bannerModelImpl._portletId;

		bannerModelImpl._originalPlId = bannerModelImpl._plId;

		bannerModelImpl._setOriginalPlId = false;
	}

	@Override
	public CacheModel<Banner> toCacheModel() {
		BannerCacheModel bannerCacheModel = new BannerCacheModel();

		bannerCacheModel.bannerId = getBannerId();

		bannerCacheModel.name = getName();

		String name = bannerCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			bannerCacheModel.name = null;
		}

		bannerCacheModel.title = getTitle();

		String title = bannerCacheModel.title;

		if ((title != null) && (title.length() == 0)) {
			bannerCacheModel.title = null;
		}

		bannerCacheModel.description = getDescription();

		String description = bannerCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			bannerCacheModel.description = null;
		}

		bannerCacheModel.link = getLink();

		String link = bannerCacheModel.link;

		if ((link != null) && (link.length() == 0)) {
			bannerCacheModel.link = null;
		}

		bannerCacheModel.image = getImage();

		String image = bannerCacheModel.image;

		if ((image != null) && (image.length() == 0)) {
			bannerCacheModel.image = null;
		}

		bannerCacheModel.position = getPosition();

		bannerCacheModel.type = getType();

		bannerCacheModel.status = getStatus();

		bannerCacheModel.groupId = getGroupId();

		bannerCacheModel.portletId = getPortletId();

		String portletId = bannerCacheModel.portletId;

		if ((portletId != null) && (portletId.length() == 0)) {
			bannerCacheModel.portletId = null;
		}

		bannerCacheModel.plId = getPlId();

		return bannerCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{bannerId=");
		sb.append(getBannerId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", title=");
		sb.append(getTitle());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", link=");
		sb.append(getLink());
		sb.append(", image=");
		sb.append(getImage());
		sb.append(", position=");
		sb.append(getPosition());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", portletId=");
		sb.append(getPortletId());
		sb.append(", plId=");
		sb.append(getPlId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("br.com.seatecnologia.banner.model.Banner");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>bannerId</column-name><column-value><![CDATA[");
		sb.append(getBannerId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>title</column-name><column-value><![CDATA[");
		sb.append(getTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>link</column-name><column-value><![CDATA[");
		sb.append(getLink());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>image</column-name><column-value><![CDATA[");
		sb.append(getImage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>position</column-name><column-value><![CDATA[");
		sb.append(getPosition());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portletId</column-name><column-value><![CDATA[");
		sb.append(getPortletId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>plId</column-name><column-value><![CDATA[");
		sb.append(getPlId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Banner.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Banner.class
		};
	private long _bannerId;
	private long _originalBannerId;
	private boolean _setOriginalBannerId;
	private String _name;
	private String _title;
	private String _description;
	private String _link;
	private String _image;
	private int _position;
	private int _originalPosition;
	private boolean _setOriginalPosition;
	private int _type;
	private int _status;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private String _portletId;
	private String _originalPortletId;
	private long _plId;
	private long _originalPlId;
	private boolean _setOriginalPlId;
	private transient ExpandoBridge _expandoBridge;
	private Banner _escapedModelProxy;
}